{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","name","email","phone","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","async","delete","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onSubmit","preventDefault","newContact","uuid","post","history","push","lable","EditContact","updateContact","match","params","put","cont","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f86b977.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { render } from \"@testing-library/react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: \"John Doe\",\r\n        email: \"jdoe@gmail.com\",\r\n        phone: \"555-555-5555\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Karen  Williams\",\r\n        email: \"karen@gmail.com\",\r\n        phone: \"222-222-2222\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Henry  Johnson\",\r\n        email: \"henry@gmail.com\",\r\n        phone: \"111-111-1111\"\r\n      }\r\n    ],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = { showContactInfo: false };\r\n  onShowClick = e => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n  render() {\r\n    const { contact } = this.props;\r\n    const { id } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {contact.name}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {contact.email}</li>\r\n                  <li className=\"list-group-item\">Phone: {contact.phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h className=\"display-4 mb2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n    const { contacts } = this.state;\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-sm\r\n      navbar-dark bg-danger mb-3 py-0\"\r\n    >\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"> </i>Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"> </i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"> </i>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"diplay-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"dispaly-4\">\r\n        <span className=\"text-danger\">404</span> Page Not found\r\n      </h1>\r\n      <p className=\"lead\">Sorry that page does not exists</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error} </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    //clear state\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    lable=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    lable=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    lable=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const cont = res.data;\r\n    this.setState({ name: cont.name, email: cont.email, phone: cont.phone });\r\n  }\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n    //clear state\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    lable=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    lable=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    lable=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Provider } from \"./context\";\n//change browserRouter to HashRouter for GitHubPage deployment\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contact/add\" component={AddContact}></Route>\n              <Route\n                exact\n                path=\"/contact/edit/:id\"\n                component={EditContact}\n              ></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route exact component={NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}